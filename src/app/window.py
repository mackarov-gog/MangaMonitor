"""
–ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è MangaMonitor
"""
"""
–ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è MangaMonitor
"""

import sys
import asyncio
from PyQt5.QtWidgets import (QApplication, QMainWindow, QWidget, QVBoxLayout,
                             QHBoxLayout, QLineEdit, QPushButton, QListWidget,
                             QListWidgetItem, QLabel, QMessageBox, QTabWidget,
                             QSplitter, QScrollArea, QFrame, QProgressBar,
                             QComboBox, QCheckBox, QGroupBox, QTextEdit)
from PyQt5.QtCore import Qt, QThread, pyqtSignal, QTimer, QSize
from PyQt5.QtGui import QPixmap, QIcon, QFont, QPalette, QColor
from PyQt5.QtWebEngineWidgets import QWebEngineView
import aiohttp
import json
from pathlib import Path
import logging

logger = logging.getLogger(__name__)


class MangaItemWidget(QWidget):
    """–í–∏–¥–∂–µ—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞–Ω–≥–∏ –≤ —Å–ø–∏—Å–∫–µ"""

    def __init__(self, manga, parent=None):
        super().__init__(parent)
        self.manga = manga
        self.setup_ui()

    def setup_ui(self):
        layout = QHBoxLayout()
        layout.setContentsMargins(5, 5, 5, 5)

        # –û–±–ª–æ–∂–∫–∞ (–∑–∞–≥–ª—É—à–∫–∞)
        self.cover_label = QLabel()
        self.cover_label.setFixedSize(60, 80)
        self.cover_label.setStyleSheet("""
            QLabel {
                background-color: #2d3748;
                border: 1px solid #4a5568;
                border-radius: 4px;
            }
        """)
        self.cover_label.setAlignment(Qt.AlignCenter)

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±–ª–æ–∂–∫—É –µ—Å–ª–∏ –µ—Å—Ç—å URL
        if self.manga.cover_url and self.manga.cover_url.startswith('http'):
            # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
            self.cover_label.setText("üñºÔ∏è")
        else:
            self.cover_label.setText("üìö")

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞–Ω–≥–µ
        info_layout = QVBoxLayout()

        self.title_label = QLabel(self.manga.title)
        self.title_label.setStyleSheet("font-weight: bold; font-size: 14px; color: #e2e8f0;")
        self.title_label.setWordWrap(True)

        self.details_label = QLabel(
            f"{self.manga.source} ‚Ä¢ {self.manga.chapters_count} –≥–ª–∞–≤ ‚Ä¢ {self.manga.status.value}")
        self.details_label.setStyleSheet("color: #a0aec0; font-size: 12px;")

        self.genres_label = QLabel(", ".join(self.manga.genres[:3]))
        self.genres_label.setStyleSheet("color: #718096; font-size: 11px;")
        self.genres_label.setWordWrap(True)

        info_layout.addWidget(self.title_label)
        info_layout.addWidget(self.details_label)
        info_layout.addWidget(self.genres_label)
        info_layout.addStretch()

        layout.addWidget(self.cover_label)
        layout.addLayout(info_layout)
        layout.addStretch()

        self.setLayout(layout)
        self.setFixedHeight(100)
        self.setStyleSheet("""
            MangaItemWidget {
                background-color: #2d3748;
                border: 1px solid #4a5568;
                border-radius: 6px;
                margin: 2px;
            }
            MangaItemWidget:hover {
                background-color: #4a5568;
                border-color: #718096;
            }
        """)


class SearchWorker(QThread):
    """–ü–æ—Ç–æ–∫ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞ –º–∞–Ω–≥–∏"""

    search_finished = pyqtSignal(list)
    search_error = pyqtSignal(str)

    def __init__(self, parser_manager, query):
        super().__init__()
        self.parser_manager = parser_manager
        self.query = query

    def run(self):
        try:
            # –ó–∞–ø—É—Å–∫–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –ø–æ–∏—Å–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º event loop
            loop = asyncio.new_event_loop()
            asyncio.set_event_loop(loop)

            async def do_search():
                return await self.parser_manager.search_all(self.query)

            results = loop.run_until_complete(do_search())
            loop.close()

            self.search_finished.emit(results)

        except Exception as e:
            self.search_error.emit(str(e))


class MainWindow(QMainWindow):
    """–ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è MangaMonitor"""

    def __init__(self, config, parser_manager, web_server):
        super().__init__()
        self.config = config
        self.parser_manager = parser_manager
        self.web_server = web_server
        self.current_manga = None
        self.search_worker = None

        self.setup_ui()
        self.setup_styles()

        # –¢–∞–π–º–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
        self.status_timer = QTimer()
        self.status_timer.timeout.connect(self.update_status)
        self.status_timer.start(5000)

    def setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        self.setWindowTitle(f"{self.config.app_name} v{self.config.version}")
        self.setGeometry(100, 100, self.config.window_width, self.config.window_height)

        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç
        central_widget = QWidget()
        self.setCentralWidget(central_widget)

        # –û—Å–Ω–æ–≤–Ω–æ–π layout
        main_layout = QVBoxLayout()
        main_layout.setContentsMargins(10, 10, 10, 10)
        main_layout.setSpacing(10)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_layout = QHBoxLayout()
        title_label = QLabel("MangaMonitor")
        title_label.setStyleSheet("font-size: 24px; font-weight: bold; color: #e2e8f0;")
        title_layout.addWidget(title_label)
        title_layout.addStretch()

        # –°—Ç–∞—Ç—É—Å –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
        self.status_label = QLabel("üü¢ API –¥–æ—Å—Ç—É–ø–µ–Ω")
        self.status_label.setStyleSheet("color: #68d391; font-size: 12px;")
        title_layout.addWidget(self.status_label)

        main_layout.addLayout(title_layout)

        # –ü–æ–∏—Å–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å
        search_group = QGroupBox("–ü–æ–∏—Å–∫ –º–∞–Ω–≥–∏")
        search_layout = QHBoxLayout()

        self.search_input = QLineEdit()
        self.search_input.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–Ω–≥–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞...")
        self.search_input.returnPressed.connect(self.search_manga)
        self.search_input.setStyleSheet("""
            QLineEdit {
                padding: 8px;
                border: 1px solid #4a5568;
                border-radius: 4px;
                background-color: #2d3748;
                color: #e2e8f0;
                font-size: 14px;
            }
            QLineEdit:focus {
                border-color: #4299e1;
            }
        """)

        self.search_button = QPushButton("–ü–æ–∏—Å–∫")
        self.search_button.clicked.connect(self.search_manga)
        self.search_button.setStyleSheet("""
            QPushButton {
                background-color: #4299e1;
                color: white;
                border: none;
                padding: 8px 16px;
                border-radius: 4px;
                font-weight: bold;
            }
            QPushButton:hover {
                background-color: #3182ce;
            }
            QPushButton:pressed {
                background-color: #2b6cb0;
            }
        """)

        # –§–∏–ª—å—Ç—Ä –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        self.source_combo = QComboBox()
        self.source_combo.addItem("–í—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏")
        for source in self.parser_manager.get_available_sources():
            self.source_combo.addItem(source)
        self.source_combo.setStyleSheet("""
            QComboBox {
                padding: 8px;
                border: 1px solid #4a5568;
                border-radius: 4px;
                background-color: #2d3748;
                color: #e2e8f0;
                min-width: 120px;
            }
        """)

        search_layout.addWidget(self.search_input)
        search_layout.addWidget(self.source_combo)
        search_layout.addWidget(self.search_button)
        search_group.setLayout(search_layout)
        main_layout.addWidget(search_group)

        # –°–ø–ª–∏—Ç—Ç–µ—Ä –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∏ –¥–µ—Ç–∞–ª–µ–π
        splitter = QSplitter(Qt.Horizontal)

        # –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å - —Å–ø–∏—Å–æ–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        left_panel = QWidget()
        left_layout = QVBoxLayout()

        self.results_label = QLabel("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:")
        self.results_label.setStyleSheet("color: #e2e8f0; font-weight: bold;")

        self.results_list = QListWidget()
        self.results_list.itemClicked.connect(self.on_manga_selected)
        self.results_list.setStyleSheet("""
            QListWidget {
                background-color: #2d3748;
                border: 1px solid #4a5568;
                border-radius: 4px;
                outline: none;
            }
            QListWidget::item {
                border: none;
            }
        """)

        left_layout.addWidget(self.results_label)
        left_layout.addWidget(self.results_list)
        left_panel.setLayout(left_layout)

        # –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å - –¥–µ—Ç–∞–ª–∏ –º–∞–Ω–≥–∏
        right_panel = QWidget()
        right_layout = QVBoxLayout()

        self.details_label = QLabel("–í—ã–±–µ—Ä–∏—Ç–µ –º–∞–Ω–≥—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π")
        self.details_label.setStyleSheet("color: #a0aec0; font-size: 14px;")
        self.details_label.setAlignment(Qt.AlignCenter)

        # –¢–∞–±—ã –¥–ª—è –¥–µ—Ç–∞–ª–µ–π
        self.tabs = QTabWidget()

        # –í–∫–ª–∞–¥–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        self.info_tab = QWidget()
        self.setup_info_tab()
        self.tabs.addTab(self.info_tab, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")

        # –í–∫–ª–∞–¥–∫–∞ –≥–ª–∞–≤
        self.chapters_tab = QWidget()
        self.setup_chapters_tab()
        self.tabs.addTab(self.chapters_tab, "–ì–ª–∞–≤—ã")

        # –í–∫–ª–∞–¥–∫–∞ —á—Ç–µ–Ω–∏—è
        self.reader_tab = QWidget()
        self.setup_reader_tab()
        self.tabs.addTab(self.reader_tab, "–ß—Ç–µ–Ω–∏–µ")

        self.tabs.setStyleSheet("""
            QTabWidget::pane {
                border: 1px solid #4a5568;
                background-color: #2d3748;
            }
            QTabBar::tab {
                background-color: #4a5568;
                color: #e2e8f0;
                padding: 8px 16px;
                border: none;
            }
            QTabBar::tab:selected {
                background-color: #4299e1;
            }
            QTabBar::tab:hover:!selected {
                background-color: #718096;
            }
        """)

        right_layout.addWidget(self.details_label)
        right_layout.addWidget(self.tabs)
        right_panel.setLayout(right_layout)

        splitter.addWidget(left_panel)
        splitter.addWidget(right_panel)
        splitter.setSizes([400, 600])

        main_layout.addWidget(splitter)

        # –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –¥–ª—è –ø–æ–∏—Å–∫–∞
        self.progress_bar = QProgressBar()
        self.progress_bar.setVisible(False)
        self.progress_bar.setStyleSheet("""
            QProgressBar {
                border: 1px solid #4a5568;
                border-radius: 4px;
                text-align: center;
                color: #e2e8f0;
            }
            QProgressBar::chunk {
                background-color: #4299e1;
            }
        """)
        main_layout.addWidget(self.progress_bar)

        central_widget.setLayout(main_layout)

    def setup_info_tab(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∫–ª–∞–¥–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–∞–Ω–≥–µ"""
        layout = QVBoxLayout()

        # –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º–∞—è –æ–±–ª–∞—Å—Ç—å
        scroll = QScrollArea()
        scroll.setWidgetResizable(True)

        content = QWidget()
        content_layout = QVBoxLayout()

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –æ–±–ª–æ–∂–∫–∞
        header_layout = QHBoxLayout()

        self.manga_cover = QLabel()
        self.manga_cover.setFixedSize(200, 300)
        self.manga_cover.setStyleSheet("""
            QLabel {
                background-color: #4a5568;
                border: 1px solid #718096;
                border-radius: 6px;
            }
        """)
        self.manga_cover.setAlignment(Qt.AlignCenter)
        self.manga_cover.setText("–û–±–ª–æ–∂–∫–∞\n–Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")

        self.manga_title = QLabel()
        self.manga_title.setStyleSheet("font-size: 20px; font-weight: bold; color: #e2e8f0;")
        self.manga_title.setWordWrap(True)

        title_info_layout = QVBoxLayout()
        title_info_layout.addWidget(self.manga_title)
        title_info_layout.addStretch()

        header_layout.addWidget(self.manga_cover)
        header_layout.addLayout(title_info_layout)
        header_layout.addStretch()

        content_layout.addLayout(header_layout)

        # –î–µ—Ç–∞–ª–∏
        details_group = QGroupBox("–î–µ—Ç–∞–ª–∏")
        details_layout = QVBoxLayout()

        self.manga_description = QTextEdit()
        self.manga_description.setReadOnly(True)
        self.manga_description.setStyleSheet("""
            QTextEdit {
                background-color: #2d3748;
                border: 1px solid #4a5568;
                border-radius: 4px;
                color: #e2e8f0;
                padding: 8px;
            }
        """)

        self.manga_meta = QLabel()
        self.manga_meta.setStyleSheet("color: #a0aec0;")

        details_layout.addWidget(QLabel("–û–ø–∏—Å–∞–Ω–∏–µ:"))
        details_layout.addWidget(self.manga_description)
        details_layout.addWidget(self.manga_meta)
        details_group.setLayout(details_layout)

        content_layout.addWidget(details_group)
        content_layout.addStretch()

        content.setLayout(content_layout)
        scroll.setWidget(content)
        layout.addWidget(scroll)

        self.info_tab.setLayout(layout)

    def setup_chapters_tab(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∫–ª–∞–¥–∫–∏ –≥–ª–∞–≤"""
        layout = QVBoxLayout()

        self.chapters_list = QListWidget()
        self.chapters_list.itemClicked.connect(self.on_chapter_selected)
        self.chapters_list.setStyleSheet("""
            QListWidget {
                background-color: #2d3748;
                border: 1px solid #4a5568;
                border-radius: 4px;
            }
        """)

        layout.addWidget(QLabel("–°–ø–∏—Å–æ–∫ –≥–ª–∞–≤:"))
        layout.addWidget(self.chapters_list)

        self.chapters_tab.setLayout(layout)

    def setup_reader_tab(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∫–ª–∞–¥–∫–∏ —á—Ç–µ–Ω–∏—è"""
        layout = QVBoxLayout()

        self.reader_label = QLabel("–í—ã–±–µ—Ä–∏—Ç–µ –≥–ª–∞–≤—É –¥–ª—è —á—Ç–µ–Ω–∏—è")
        self.reader_label.setStyleSheet("color: #a0aec0; font-size: 16px;")
        self.reader_label.setAlignment(Qt.AlignCenter)

        # –ù–∞–≤–∏–≥–∞—Ü–∏—è
        nav_layout = QHBoxLayout()

        self.prev_button = QPushButton("‚Üê –ü—Ä–µ–¥—ã–¥—É—â–∞—è")
        self.prev_button.clicked.connect(self.prev_page)
        self.prev_button.setEnabled(False)

        self.next_button = QPushButton("–°–ª–µ–¥—É—é—â–∞—è ‚Üí")
        self.next_button.clicked.connect(self.next_page)
        self.next_button.setEnabled(False)

        self.page_label = QLabel("–°—Ç—Ä–∞–Ω–∏—Ü–∞: - / -")
        self.page_label.setStyleSheet("color: #e2e8f0;")

        nav_layout.addWidget(self.prev_button)
        nav_layout.addWidget(self.page_label)
        nav_layout.addWidget(self.next_button)

        # –û–±–ª–∞—Å—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
        self.reader_view = QWebEngineView()
        self.reader_view.setHtml("""
            <html>
                <body style="background-color: #2d3748; color: #e2e8f0; display: flex; justify-content: center; align-items: center; height: 100vh; margin: 0;">
                    <div style="text-align: center;">
                        <h1>–í—ã–±–µ—Ä–∏—Ç–µ –≥–ª–∞–≤—É –¥–ª—è —á—Ç–µ–Ω–∏—è</h1>
                        <p>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –≥–ª–∞–≤—É –≤ —Å–ø–∏—Å–∫–µ —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —á—Ç–µ–Ω–∏–µ</p>
                    </div>
                </body>
            </html>
        """)

        layout.addLayout(nav_layout)
        layout.addWidget(self.reader_view)

        self.reader_tab.setLayout(layout)

    def setup_styles(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª–µ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        self.setStyleSheet("""
            QMainWindow {
                background-color: #1a202c;
            }
            QWidget {
                background-color: #1a202c;
                color: #e2e8f0;
            }
            QGroupBox {
                color: #e2e8f0;
                font-weight: bold;
                border: 1px solid #4a5568;
                border-radius: 6px;
                margin-top: 10px;
                padding-top: 10px;
            }
            QGroupBox::title {
                subcontrol-origin: margin;
                left: 10px;
                padding: 0 5px 0 5px;
            }
            QLabel {
                color: #e2e8f0;
            }
        """)

    def search_manga(self):
        """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –º–∞–Ω–≥–∏"""
        query = self.search_input.text().strip()
        if not query:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞")
            return

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
        self.progress_bar.setVisible(True)
        self.progress_bar.setRange(0, 0)  # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –±–µ–∑ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞

        # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        self.results_list.clear()
        self.results_label.setText(f"–ü–æ–∏—Å–∫: {query}...")

        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–∏—Å–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        self.search_worker = SearchWorker(self.parser_manager, query)
        self.search_worker.search_finished.connect(self.on_search_finished)
        self.search_worker.search_error.connect(self.on_search_error)
        self.search_worker.start()

    def on_search_finished(self, results):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞"""
        self.progress_bar.setVisible(False)
        self.results_label.setText(f"–ù–∞–π–¥–µ–Ω–æ –º–∞–Ω–≥–∏: {len(results)}")

        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        for manga in results:
            item_widget = MangaItemWidget(manga)
            item = QListWidgetItem(self.results_list)
            item.setSizeHint(item_widget.sizeHint())
            self.results_list.addItem(item)
            self.results_list.setItemWidget(item, item_widget)

    def on_search_error(self, error_message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –ø–æ–∏—Å–∫–∞"""
        self.progress_bar.setVisible(False)
        self.results_label.setText("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ")
        QMessageBox.critical(self, "–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞", f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ: {error_message}")

    def on_manga_selected(self, item):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –º–∞–Ω–≥–∏ –∏–∑ —Å–ø–∏—Å–∫–∞"""
        # –ü–æ–ª—É—á–∞–µ–º –≤–∏–¥–∂–µ—Ç –º–∞–Ω–≥–∏
        widget = self.results_list.itemWidget(item)
        if not widget:
            return

        self.current_manga = widget.manga
        self.show_manga_details(self.current_manga)

    def show_manga_details(self, manga):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–∞–Ω–≥–µ"""
        self.details_label.setText(f"–î–µ—Ç–∞–ª–∏: {manga.title}")

        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        self.manga_title.setText(manga.title)
        self.manga_description.setText(manga.description or "–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")

        meta_text = f"""
        –ò—Å—Ç–æ—á–Ω–∏–∫: {manga.source}<br>
        –°—Ç–∞—Ç—É—Å: {manga.status.value}<br>
        –ì–ª–∞–≤: {manga.chapters_count}<br>
        –ñ–∞–Ω—Ä—ã: {', '.join(manga.genres)}<br>
        {f'–†–µ–π—Ç–∏–Ω–≥: {manga.rating}' if manga.rating else ''}
        """
        self.manga_meta.setText(meta_text)

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –≥–ª–∞–≤—ã
        self.load_chapters(manga.id)

    def load_chapters(self, manga_id):
        """–ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –≥–ª–∞–≤"""
        self.chapters_list.clear()
        self.chapters_list.addItem("–ó–∞–≥—Ä—É–∑–∫–∞ –≥–ª–∞–≤...")

        # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É –≥–ª–∞–≤ —á–µ—Ä–µ–∑ –ø–∞—Ä—Å–µ—Ä
        # –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        for i in range(1, 6):
            item = QListWidgetItem(f"–ì–ª–∞–≤–∞ {i}")
            item.setData(Qt.UserRole, f"chapter_{i}")
            self.chapters_list.addItem(item)

        # –£–±–∏—Ä–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç "–ó–∞–≥—Ä—É–∑–∫–∞..."
        if self.chapters_list.count() > 1:
            self.chapters_list.takeItem(0)

    def on_chapter_selected(self, item):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –≥–ª–∞–≤—ã"""
        chapter_id = item.data(Qt.UserRole)
        self.reader_label.setText(f"–ß—Ç–µ–Ω–∏–µ: {item.text()}")

        # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü
        # –ü–æ–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
        html_content = f"""
        <html>
            <body style="background-color: #2d3748; color: #e2e8f0; display: flex; justify-content: center; align-items: center; height: 100vh; margin: 0; flex-direction: column;">
                <div style="text-align: center;">
                    <h1>{item.text()}</h1>
                    <p>–§—É–Ω–∫—Ü–∏—è —á—Ç–µ–Ω–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</p>
                    <p>–í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –º–∞–Ω–≥–∏</p>
                </div>
            </body>
        </html>
        """
        self.reader_view.setHtml(html_content)

        # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
        self.prev_button.setEnabled(True)
        self.next_button.setEnabled(True)
        self.page_label.setText("–°—Ç—Ä–∞–Ω–∏—Ü–∞: 1 / 1")

    def prev_page(self):
        """–ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ"""
        # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –Ω–∞–≤–∏–≥–∞—Ü–∏—é –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
        pass

    def next_page(self):
        """–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ"""
        # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –Ω–∞–≤–∏–≥–∞—Ü–∏—é –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
        pass

    def update_status(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
            import requests
            response = requests.get(f"http://{self.config.host}:{self.config.port}/api/health", timeout=2)
            if response.status_code == 200:
                self.status_label.setText("üü¢ API –¥–æ—Å—Ç—É–ø–µ–Ω")
                self.status_label.setStyleSheet("color: #68d391; font-size: 12px;")
            else:
                self.status_label.setText("üü° API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
                self.status_label.setStyleSheet("color: #ed8936; font-size: 12px;")
        except:
            self.status_label.setText("üî¥ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            self.status_label.setStyleSheet("color: #fc8181; font-size: 12px;")

    def closeEvent(self, event):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞"""
        if self.config.minimize_to_tray:
            event.ignore()
            self.hide()
            # TODO: –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ —Ç—Ä–µ–µ
            QMessageBox.information(self, "MangaMonitor", "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–≤–µ—Ä–Ω—É—Ç–æ –≤ —Å–∏—Å—Ç–µ–º–Ω—ã–π —Ç—Ä–µ–π")
        else:
            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–∏—Å–∫ –µ—Å–ª–∏ –æ–Ω –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è
            if self.search_worker and self.search_worker.isRunning():
                self.search_worker.terminate()
                self.search_worker.wait()
            event.accept()